<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\output\bootloader.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\output\bootloader.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Fri Aug 30 11:03:49 2024
<BR><P>
<H3>Maximum Stack Usage =       1200 bytes + Unknown(Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; enter_bootloader &rArr; SerialDownload &rArr; Ymodem_Receive &rArr; Upgrade_failure_ErasePage &rArr; write_flash_holfword_buffer &rArr; write_flash_holfword &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[10]">ADC1_IRQHandler</a> from stm32f0xx_it.o(i.ADC1_IRQHandler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[d]">DMA1_Channel1_IRQHandler</a> from stm32f0xx_it.o(i.DMA1_Channel1_IRQHandler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[e]">DMA1_Channel2_3_IRQHandler</a> from stm32f0xx_it.o(i.DMA1_Channel2_3_IRQHandler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[f]">DMA1_Channel4_5_IRQHandler</a> from stm32f0xx_it.o(i.DMA1_Channel4_5_IRQHandler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[a]">EXTI0_1_IRQHandler</a> from stm32f0xx_it.o(i.EXTI0_1_IRQHandler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[b]">EXTI2_3_IRQHandler</a> from stm32f0xx_it.o(i.EXTI2_3_IRQHandler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[c]">EXTI4_15_IRQHandler</a> from stm32f0xx_it.o(i.EXTI4_15_IRQHandler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[8]">FLASH_IRQHandler</a> from stm32f0xx_it.o(i.FLASH_IRQHandler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f0xx_it.o(i.HardFault_Handler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[19]">I2C1_IRQHandler</a> from stm32f0xx_it.o(i.I2C1_IRQHandler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[1a]">I2C2_IRQHandler</a> from stm32f0xx_it.o(i.I2C2_IRQHandler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f0xx_it.o(i.NMI_Handler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from stm32f0xx_it.o(i.PendSV_Handler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[9]">RCC_IRQHandler</a> from stm32f0xx_it.o(i.RCC_IRQHandler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[7]">RTC_IRQHandler</a> from stm32f0xx_it.o(i.RTC_IRQHandler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f030x8.o(.text) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[1b]">SPI1_IRQHandler</a> from stm32f0xx_it.o(i.SPI1_IRQHandler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[1c]">SPI2_IRQHandler</a> from stm32f0xx_it.o(i.SPI2_IRQHandler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from stm32f0xx_it.o(i.SVC_Handler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from stm32f0xx_it.o(i.SysTick_Handler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[20]">SystemInit</a> from system_stm32f0xx.o(i.SystemInit) referenced from startup_stm32f030x8.o(.text)
 <LI><a href="#[15]">TIM14_IRQHandler</a> from stm32f0xx_it.o(i.TIM14_IRQHandler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[16]">TIM15_IRQHandler</a> from stm32f0xx_it.o(i.TIM15_IRQHandler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[17]">TIM16_IRQHandler</a> from stm32f0xx_it.o(i.TIM16_IRQHandler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[18]">TIM17_IRQHandler</a> from stm32f0xx_it.o(i.TIM17_IRQHandler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[11]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from stm32f0xx_it.o(i.TIM1_BRK_UP_TRG_COM_IRQHandler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[12]">TIM1_CC_IRQHandler</a> from stm32f0xx_it.o(i.TIM1_CC_IRQHandler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[13]">TIM3_IRQHandler</a> from stm32f0xx_it.o(i.TIM3_IRQHandler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[14]">TIM6_IRQHandler</a> from stm32f0xx_it.o(i.TIM6_IRQHandler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[1d]">USART1_IRQHandler</a> from stm32f0xx_it.o(i.USART1_IRQHandler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[1e]">USART2_IRQHandler</a> from stm32f0xx_it.o(i.USART2_IRQHandler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from stm32f0xx_it.o(i.WWDG_IRQHandler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[21]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f030x8.o(.text)
 <LI><a href="#[1f]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[21]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(.text)
</UL>
<P><STRONG><a name="[68]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[22]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[27]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[69]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[6a]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[6b]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[6c]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[6d]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[4b]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLL_GetFreqDomain_SYS
</UL>

<P><STRONG><a name="[2d]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Receive
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Firmware
</UL>

<P><STRONG><a name="[6f]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[70]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[25]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[71]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[72]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[24]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[29]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_failure_ErasePage
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Receive
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTA_Ack
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NameAndSize_Check
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Handshake_Get
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Firmware
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_flash_write_iap_inf
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JomToApp
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_ID
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Udatat_Erase
</UL>

<P><STRONG><a name="[73]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[26]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[23]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[74]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[10]"></a>ADC1_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.ADC1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>App_Udatat_Erase</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, main.o(i.App_Udatat_Erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = App_Udatat_Erase &rArr; read_flash_holfword
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_holfword
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PagesMask
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_bootloader
</UL>

<P><STRONG><a name="[5c]"></a>Bit32_checksum_verify</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, ymodem.o(i.Bit32_checksum_verify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Bit32_checksum_verify
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Receive
</UL>

<P><STRONG><a name="[2c]"></a>Check_Firmware</STRONG> (Thumb, 110 bytes, Stack size 48 bytes, download.o(i.Check_Firmware))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = Check_Firmware &rArr; OTA_Ack &rArr; UsartSendBuff
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTA_Ack
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PagesMask
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Handshake_Get
</UL>

<P><STRONG><a name="[d]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.DMA1_Channel1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.DMA1_Channel2_3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA1_Channel4_5_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.DMA1_Channel4_5_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.EXTI0_1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.EXTI2_3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.EXTI4_15_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>FLASH_ErasePage</STRONG> (Thumb, 52 bytes, Stack size 20 bytes, flash.o(i.FLASH_ErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FW_ErasePage
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_flash_OnePage
</UL>

<P><STRONG><a name="[33]"></a>FLASH_GetStatus</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, flash.o(i.FLASH_GetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[8]"></a>FLASH_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.FLASH_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>FLASH_Lock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, flash.o(i.FLASH_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash_holfword_buffer
</UL>

<P><STRONG><a name="[2b]"></a>FLASH_PagesMask</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, common.o(i.FLASH_PagesMask))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLASH_PagesMask
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Receive
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NameAndSize_Check
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Firmware
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Udatat_Erase
</UL>

<P><STRONG><a name="[31]"></a>FLASH_ProgramHalfWord</STRONG> (Thumb, 48 bytes, Stack size 20 bytes, flash.o(i.FLASH_ProgramHalfWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash_holfword
</UL>

<P><STRONG><a name="[32]"></a>FLASH_ProgramWord</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, flash.o(i.FLASH_ProgramWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fw_updata
</UL>

<P><STRONG><a name="[60]"></a>FLASH_Unlock</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, flash.o(i.FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash_holfword_buffer
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_bootloader
</UL>

<P><STRONG><a name="[30]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[34]"></a>FW_ErasePage</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, ymodem.o(i.FW_ErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FW_ErasePage &rArr; FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_failure_ErasePage
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Receive
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NameAndSize_Check
</UL>

<P><STRONG><a name="[35]"></a>GPIO_INUP_Init</STRONG> (Thumb, 28 bytes, Stack size 32 bytes, gpio.o(i.GPIO_INUP_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = GPIO_INUP_Init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC22xx_Init
</UL>

<P><STRONG><a name="[37]"></a>GPIO_OUT_init</STRONG> (Thumb, 28 bytes, Stack size 32 bytes, gpio.o(i.GPIO_OUT_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = GPIO_OUT_init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC22xx_Init
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_init
</UL>

<P><STRONG><a name="[38]"></a>Gpio_init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gpio.o(i.Gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Gpio_init &rArr; Led_init &rArr; GPIO_OUT_init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_init
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC22xx_Init
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_init
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_AHB1_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3e]"></a>Handshake_Get</STRONG> (Thumb, 310 bytes, Stack size 72 bytes, download.o(i.Handshake_Get))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = Handshake_Get &rArr; Check_Firmware &rArr; OTA_Ack &rArr; UsartSendBuff
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Byte
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive_Byte
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Usart
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTA_Ack
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NameAndSize_Check
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Firmware
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialDownload
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>I2C1_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.I2C1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>I2C2_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.I2C2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>JomToApp</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, download.o(i.JomToApp))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = JomToApp &rArr; write_flash_holfword_buffer &rArr; write_flash_holfword &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash_holfword_buffer
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_holfword
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialDownload
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[36]"></a>LL_GPIO_Init</STRONG> (Thumb, 168 bytes, Stack size 20 bytes, stm32f0xx_ll_gpio.o(i.LL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OUT_init
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INUP_Init
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart22_Init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart11_Init
</UL>

<P><STRONG><a name="[45]"></a>LL_RCC_GetSystemClocksFreq</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f0xx_ll_rcc.o(i.LL_RCC_GetSystemClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LL_RCC_GetSystemClocksFreq &rArr; RCC_GetSystemClockFreq &rArr; RCC_PLL_GetFreqDomain_SYS &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSystemClockFreq
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK1ClockFreq
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetHCLKClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
</UL>

<P><STRONG><a name="[49]"></a>LL_RCC_GetUSARTClockFreq</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, stm32f0xx_ll_rcc.o(i.LL_RCC_GetUSARTClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LL_RCC_GetUSARTClockFreq &rArr; RCC_GetSystemClockFreq &rArr; RCC_PLL_GetFreqDomain_SYS &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSystemClockFreq
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK1ClockFreq
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetHCLKClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
</UL>

<P><STRONG><a name="[4a]"></a>LL_USART_Init</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, stm32f0xx_ll_usart.o(i.LL_USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = LL_USART_Init &rArr; LL_RCC_GetUSARTClockFreq &rArr; RCC_GetSystemClockFreq &rArr; RCC_PLL_GetFreqDomain_SYS &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUSARTClockFreq
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetSystemClocksFreq
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart22_Init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart11_Init
</UL>

<P><STRONG><a name="[3b]"></a>Led_init</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, gpio.o(i.Led_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Led_init &rArr; GPIO_OUT_init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OUT_init
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_AHB1_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_init
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>NameAndSize_Check</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, download.o(i.NameAndSize_Check))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = NameAndSize_Check &rArr; FW_ErasePage &rArr; FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Byte
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FW_ErasePage
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PagesMask
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Handshake_Get
</UL>

<P><STRONG><a name="[2e]"></a>OTA_Ack</STRONG> (Thumb, 126 bytes, Stack size 56 bytes, download.o(i.OTA_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = OTA_Ack &rArr; UsartSendBuff
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_sum_add
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsartSendBuff
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Receive
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Handshake_Get
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Firmware
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialDownload
</UL>

<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>RCC_GetHCLKClockFreq</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_ll_rcc.o(i.RCC_GetHCLKClockFreq))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUSARTClockFreq
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetSystemClocksFreq
</UL>

<P><STRONG><a name="[48]"></a>RCC_GetPCLK1ClockFreq</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_ll_rcc.o(i.RCC_GetPCLK1ClockFreq))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUSARTClockFreq
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetSystemClocksFreq
</UL>

<P><STRONG><a name="[46]"></a>RCC_GetSystemClockFreq</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f0xx_ll_rcc.o(i.RCC_GetSystemClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = RCC_GetSystemClockFreq &rArr; RCC_PLL_GetFreqDomain_SYS &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLL_GetFreqDomain_SYS
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUSARTClockFreq
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetSystemClocksFreq
</UL>

<P><STRONG><a name="[9]"></a>RCC_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.RCC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>RCC_PLL_GetFreqDomain_SYS</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, stm32f0xx_ll_rcc.o(i.RCC_PLL_GetFreqDomain_SYS))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RCC_PLL_GetFreqDomain_SYS &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSystemClockFreq
</UL>

<P><STRONG><a name="[7]"></a>RTC_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.RTC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>Read_Usart</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, download.o(i.Read_Usart))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Read_Usart
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Handshake_Get
</UL>

<P><STRONG><a name="[40]"></a>Receive_Byte</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, ymodem.o(i.Receive_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Receive_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialKeyPressed
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive_Packet
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Handshake_Get
</UL>

<P><STRONG><a name="[1b]"></a>SPI1_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.SPI1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SPI2_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.SPI2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>Send_Byte</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ymodem.o(i.Send_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Send_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialPutChar
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NameAndSize_Check
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Handshake_Get
</UL>

<P><STRONG><a name="[53]"></a>SerialDownload</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, download.o(i.SerialDownload))
<BR><BR>[Stack]<UL><LI>Max Depth = 1192<LI>Call Chain = SerialDownload &rArr; Ymodem_Receive &rArr; Upgrade_failure_ErasePage &rArr; write_flash_holfword_buffer &rArr; write_flash_holfword &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Receive
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lights_flash
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTA_Ack
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Handshake_Get
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_check
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JomToApp
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_bootloader
</UL>

<P><STRONG><a name="[4f]"></a>SerialKeyPressed</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, common.o(i.SerialKeyPressed))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive_Byte
</UL>

<P><STRONG><a name="[52]"></a>SerialPutChar</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, common.o(i.SerialPutChar))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fw_updata
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Receive
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Byte
</UL>

<P><STRONG><a name="[5d]"></a>Str2Int</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, common.o(i.Str2Int))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Str2Int
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Receive
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>SystemClock_Config</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, main.o(i.SystemClock_Config))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20]"></a>SystemInit</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, system_stm32f0xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(.text)
</UL>
<P><STRONG><a name="[15]"></a>TIM14_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.TIM14_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM15_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.TIM15_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM16_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.TIM16_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM17_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.TIM17_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.TIM1_BRK_UP_TRG_COM_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.TIM1_CC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM3_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.TIM3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIM6_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.TIM6_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TMC22xx_Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gpio.o(i.TMC22xx_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = TMC22xx_Init &rArr; GPIO_OUT_init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OUT_init
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INUP_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_init
</UL>

<P><STRONG><a name="[1d]"></a>USART1_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.USART1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USART2_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.USART2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>Upgrade_failure_ErasePage</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, ymodem.o(i.Upgrade_failure_ErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Upgrade_failure_ErasePage &rArr; write_flash_holfword_buffer &rArr; write_flash_holfword &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FW_ErasePage
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash_holfword_buffer
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_holfword
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Receive
</UL>

<P><STRONG><a name="[4d]"></a>UsartSendBuff</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, common.o(i.UsartSendBuff))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = UsartSendBuff
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTA_Ack
</UL>

<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.WWDG_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>Ymodem_Receive</STRONG> (Thumb, 508 bytes, Stack size 1088 bytes, ymodem.o(i.Ymodem_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 1168<LI>Call Chain = Ymodem_Receive &rArr; Upgrade_failure_ErasePage &rArr; write_flash_holfword_buffer &rArr; write_flash_holfword &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fw_updata
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_failure_ErasePage
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bit32_checksum_verify
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive_Packet
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FW_ErasePage
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lights_flash
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTA_Ack
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Str2Int
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialPutChar
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PagesMask
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialDownload
</UL>

<P><STRONG><a name="[75]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[76]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[77]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[3c]"></a>ble_init</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, gpio.o(i.ble_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = ble_init &rArr; GPIO_OUT_init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OUT_init
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INUP_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_init
</UL>

<P><STRONG><a name="[5e]"></a>check_ID</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, main.o(i.check_ID))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = check_ID &rArr; write_flash_holfword_buffer &rArr; write_flash_holfword &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash_holfword_buffer
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_holfword
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4c]"></a>check_sum_add</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ymodem.o(i.check_sum_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = check_sum_add
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTA_Ack
</UL>

<P><STRONG><a name="[51]"></a>checksum_verify</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ymodem.o(i.checksum_verify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = checksum_verify
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive_Packet
</UL>

<P><STRONG><a name="[5f]"></a>enter_bootloader</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, main.o(i.enter_bootloader))
<BR><BR>[Stack]<UL><LI>Max Depth = 1192<LI>Call Chain = enter_bootloader &rArr; SerialDownload &rArr; Ymodem_Receive &rArr; Upgrade_failure_ErasePage &rArr; write_flash_holfword_buffer &rArr; write_flash_holfword &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;para_init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialDownload
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Udatat_Erase
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart22_Init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart11_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[62]"></a>erase_flash_OnePage</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, flash.o(i.erase_flash_OnePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = erase_flash_OnePage &rArr; FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash_holfword_buffer
</UL>

<P><STRONG><a name="[5b]"></a>fw_updata</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, ymodem.o(i.fw_updata))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = fw_updata &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialPutChar
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Receive
</UL>

<P><STRONG><a name="[63]"></a>iap_flash_write_iap_inf</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, flash.o(i.iap_flash_write_iap_inf))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = iap_flash_write_iap_inf &rArr; write_flash_holfword_buffer &rArr; write_flash_holfword &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash_holfword_buffer
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_holfword
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[56]"></a>key_check</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gpio.o(i.key_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = key_check
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_IsInputPinSet
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialDownload
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3d]"></a>key_gpio_init</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, gpio.o(i.key_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = key_gpio_init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_init
</UL>

<P><STRONG><a name="[55]"></a>lights_flash</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, download.o(i.lights_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lights_flash
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Receive
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialDownload
</UL>

<P><STRONG><a name="[1f]"></a>main</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 1200<LI>Call Chain = main &rArr; enter_bootloader &rArr; SerialDownload &rArr; Ymodem_Receive &rArr; Upgrade_failure_ErasePage &rArr; write_flash_holfword_buffer &rArr; write_flash_holfword &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_check
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_flash_write_iap_inf
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JomToApp
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_bootloader
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_ID
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_APB1_GRP2_EnableClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[61]"></a>para_init</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ymodem.o(i.para_init))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_bootloader
</UL>

<P><STRONG><a name="[2a]"></a>read_flash_holfword</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, flash.o(i.read_flash_holfword))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = read_flash_holfword
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_failure_ErasePage
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_flash_write_iap_inf
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JomToApp
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_ID
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Udatat_Erase
</UL>

<P><STRONG><a name="[66]"></a>write_flash_holfword</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, flash.o(i.write_flash_holfword))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = write_flash_holfword &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash_holfword_buffer
</UL>

<P><STRONG><a name="[44]"></a>write_flash_holfword_buffer</STRONG> (Thumb, 60 bytes, Stack size 28 bytes, flash.o(i.write_flash_holfword_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = write_flash_holfword_buffer &rArr; write_flash_holfword &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash_holfword
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_flash_OnePage
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Upgrade_failure_ErasePage
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_flash_write_iap_inf
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JomToApp
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_ID
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[59]"></a>LL_APB1_GRP2_EnableClock</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, main.o(i.LL_APB1_GRP2_EnableClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_APB1_GRP2_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart11_Init
</UL>

<P><STRONG><a name="[58]"></a>Usart11_Init</STRONG> (Thumb, 106 bytes, Stack size 72 bytes, main.o(i.Usart11_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = Usart11_Init &rArr; LL_USART_Init &rArr; LL_RCC_GetUSARTClockFreq &rArr; RCC_GetSystemClockFreq &rArr; RCC_PLL_GetFreqDomain_SYS &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_APB1_GRP2_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_bootloader
</UL>

<P><STRONG><a name="[5a]"></a>Usart22_Init</STRONG> (Thumb, 114 bytes, Stack size 80 bytes, main.o(i.Usart22_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = Usart22_Init &rArr; LL_USART_Init &rArr; LL_RCC_GetUSARTClockFreq &rArr; RCC_GetSystemClockFreq &rArr; RCC_PLL_GetFreqDomain_SYS &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_bootloader
</UL>

<P><STRONG><a name="[39]"></a>LL_AHB1_GRP1_EnableClock</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gpio.o(i.LL_AHB1_GRP1_EnableClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_AHB1_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_init
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_init
</UL>

<P><STRONG><a name="[64]"></a>LL_GPIO_IsInputPinSet</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gpio.o(i.LL_GPIO_IsInputPinSet))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_check
</UL>

<P><STRONG><a name="[50]"></a>Receive_Packet</STRONG> (Thumb, 208 bytes, Stack size 40 bytes, ymodem.o(i.Receive_Packet))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Receive_Packet &rArr; Receive_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum_verify
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Receive
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
